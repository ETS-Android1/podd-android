apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    useLibrary 'org.apache.http.legacy'
    dexOptions {
        jumboMode = true
    }

    defaultConfig {
        applicationId "org.cm.podd.report"
        minSdkVersion 15
        targetSdkVersion 20
        versionCode 54
        versionName "2.0.3"
        buildConfigField "String", "GCM_SERVICE_ID", "\"124985974076\""
        buildConfigField "String", "BUCKET_NAME", "\"podd-dev\""
        buildConfigField "boolean", "REAL_SUBMIT", "true"
        multiDexEnabled true
        testInstrumentationRunner "com.android.test.runner.MultiDexTestRunner"
    }

    signingConfigs {
        release {
            keyAlias 'podd_report'
            storeFile file('../report.keystore')
            storePassword "xxx"
            keyPassword "yyy"
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }

        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        server_test {
            buildConfigField "String", "SERVER_URL", "\"http://apidev.cmonehealth.org\""
        }

        server_production {
            buildConfigField "String", "SERVER_URL", "\"https://api.cmonehealth.org\""
            buildConfigField "String", "BUCKET_NAME", "\"podd\""
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile('de.keyboardsurfer.android.widget:crouton:1.8.4@aar') {
        exclude group: 'com.google.android', module: 'support-v4'
    }
    compile files('libs/aws-android-sdk-2.1.5-core.jar')
    compile files('libs/aws-android-sdk-2.1.5-s3.jar')
    compile files('libs/mpandroidchartlibrary-1-7-4.jar')
    compile 'org.mozilla:rhino:1.7R4'
    compile 'com.android.support:appcompat-v7:25.1.1'
    compile 'com.android.support:design:25.1.1'
    compile 'com.google.android.gms:play-services-base:7.8.0'
    compile 'com.google.android.gms:play-services-location:7.8.0'
    compile 'com.google.android.gms:play-services-analytics:7.8.0'
    compile 'com.google.android.gms:play-services-gcm:7.8.0'
    compile 'com.android.support:cardview-v7:25.1.1'
    compile 'com.android.support:recyclerview-v7:25.1.1'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.squareup.picasso:picasso:2.5.0'
    compile 'me.dm7.barcodescanner:zxing:1.8.2'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:support-v4:25.3.1'
}

task askForPasswords << {
    // Must create String because System.readPassword() returns char[]
    // (and assigning that below fails silently)
    def storePw = new String(System.console().readPassword("Keystore password: "))
    //def keyPw  = new String(System.console().readPassword("Key password: "))

    android.signingConfigs.release.storePassword = storePw
    android.signingConfigs.release.keyPassword = storePw
}


tasks.whenTaskAdded { theTask ->
    if (theTask.name.equals("packageServer_productionRelease") || theTask.name.equals("packageServer_testRelease")) {
        theTask.dependsOn "askForPasswords"
    }
}